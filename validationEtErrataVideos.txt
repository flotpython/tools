************************* VALIDATION ***************************

C012AL-W2-S5 OK
C012AL-W2-S6 NOK (le texte surimposé doit être noir)
C012AL-W2-S7 OK
C012AL-W2-S8 NOK (le texte surimposé doit être noir)



C012AL-W3-S1  OK
C012AL-W3-S2  OK
C012AL-W3-S3  OK
C012AL-W3-S4  NOK (mineur : le glissement de mon incrustation à 8:19 est étrange, pourquoi pas faire un fondu)
C012AL-W3-S5  OK 
C012AL-W3-S6  NOK (le fondu en début de vidéo sur l'image est sympa, mais il y a aussi un fondu sur le son. Ça serait mieux à mon avis d'avoir directement le son au niveau normal, sans fondu).
C012AL-W3-S7  NOK (mineur : le pointeur de la souris traine sur l'écran, il faudrait l'enlever)
C012AL-W3-S8 NOK:
			* (mineur) à 3'24 le fondu fait bizarre, j'aurais préféré un fondu blanc, mais il n'y a peut-être pas assez de vidéo pour le faire.
			* (bloquant) à 3:50, le texte surimposé doit être noir, les * sont moches pour la liste et mal centrées et surtout "élément" doit d'écrire avec des é en minuscule et non des É


			
C012AL-W4-S1 OK
C012AL-W4-S2 OK 
C012AL-W4-S3 NOK pourquoi ne pas faire à 4:50 un fondu blanc, est-ce que ça ne ferait pas plus naturel que les deux fondus superposés ?
C012AL-W4-S4 OK
C012AL-W4-S5 OK
C012AL-W4-S6 NOK changer la couleur de la police incluse dans le slide d'intro de rouge à noir
C012AL-W4-S7-partie1 OK
C012AL-W4-S7-partie2 OK (mais je pédale un peu dans la semoule)
C012AL-W4-S8-partie1 OK
C012AL-W4-S8-partie2 OK

C012AL-W5-S1 OK (pour mémoire : le fameux bruit de la chute de la table à 6:55)
C012AL-W5-S2 OK
C012AL-W5-S3 OK
C012AL-W5-S4 OK (vibration de la camera à 6:54, je pense qu'il n'y a rien à faire)
C012AL-W5-S5 OK
C012AL-W5-S6 OK
C012AL-W5-S7 NOK (le pointeur de la souris sous forme de croix reste sur le transparent au début de la vidéo de 0:50 à 2:50)

REMARQUES DIVERSES POUR LES PROCHAINS ENREGISTREMENTS
*il faudra faire attention pour les prochaines enregistrement 
que la gauche de celui qui parle n'est pas celle de celui qui regarde. 
En particulier, à chaque fois que je veux parler de la gauche d'un 
transparent, je montre l'autre côté. 

*il serait sympa d'avoir un sourire juste après l'au revoir



************************* ERRATA ***************************

C012AL-W2-S5 OK pas d'errata
C012AL-W2-S6 OK pas d'errata
C012AL-W2-S7 OK pas d'errata
C012AL-W2-S8 OK pas d'errata


C012AL-W3-S1 OK pas d'errata
C012AL-W3-S2 OK pas d'errata
C012AL-W3-S3 OK pas d'errata
C012AL-W3-S4 OK pas d'errata
C012AL-W3-S5 ERRATA
Dans cette vidéo, nous présentons comment importer un module. En particulier
nous expliquons que le nom d'un module lors de l'import sert à donner un nom
de variable au module et aussi à trouver le fichier module sur le disque dur. 
Il y a cependant deux types de modules en Python. Il y a les modules standards
écris en Python, ce sont les modules les plus courants, c'est par exemple
le cas du module os. Il existe en effet dans le répertoire des librairies Python
un fichier os.py. Mais il y a aussi les modules built-in qui sont des modules 
écris en C, soit pour des raisons de performance (par exemple, parce qu'ils 
contiennent des fonctions mathématiques), soit parce qu'ils permettent d'accéder 
à des primitives systèmes accessibles en C (comme les entrées-sorties). 
Le module math que nous prenons comme exemple dans la vidéo est un module
built-in implémenté en C, il n'y a donc pas de fichier math.py correspondant 
à ce module. 

C012AL-W3-S6 OK pas d'errata
C012AL-W3-S7 OK pas d'errata
C012AL-W3-S8 OK pas d'errata

C012AL-W4-S1 OK pas d'errata
C012AL-W4-S2 OK pas d'errata
C012AL-W4-S3 OK pas d'errata
C012AL-W4-S4 OK pas d'errata
C012AL-W4-S5 OK pas d'errata
C012AL-W4-S6 ERRATA

Dans cette vidéo, nous utilisons un abus de langage courant, mais qui peut 
entrainer de la confusion. Nous répétons à différents moments que nous
cherchons une variable dans un scope ; il aurait fallut dire que nous cherchions
la variable dans un bloc de code. 

Clarifions ces termes. Dans cette vidéo nous considérons deux notions de blocs
de code : le bloc de code d'un module et le bloc de code d'une fonction (nous
verrons en semaine 5 un nouveau bloc de code, celui des classes). 

Une variable est soit affectée, on lui donne alors une valeur qui est l'objet
référencé par la variable, soit référencée, on utilise alors la valeur d'une 
variable précédemment affectée. Regardons maintenant le lien entre
ces notions d'affectation et de référencement avec les notions de bloc
de code et de scope.  

Une variable qui est affectée dans un bloc de code devient locale à ce bloc. 
On dit que la variable est locale à la fonction ou au module et 
par définition, une variable locale à un module est appelée une variable globale. 

En résumé, une variable affectée dans une fonction est locale à la fonction. 
La valeur de cette variable sera accessible à toutes les instructions dans
le bloc de code de cette fonction et à toutes les instructions dans les blocs
de code des fonctions définies dans cette fonction. Une variable affectée dans 
un module (en dehors d'une fonction) est une variable globale du module. 
La valeur de cette variable sera accessible à toutes les instructions dans le 
module, y compris aux instructions dans les blocs de code des fonctions du module. 

On appelle l'accessibilité de la valeur d'une variable le scope (ou la portée)
de cette variable. 

Lorsque l'on référence une variable, on va chercher sa valeur suivant
la règle LEG. On cherche la variable localement au bloc de code
dans lequel elle est référencée, puis, si elle n'est pas définie, dans 
le bloc de code des fonctions englobantes, puis, si elle n'est toujours 
pas définie,  dans le bloc de code du module. De manière équivalente, 
on pourrait dire que la valeur de la variable référencée est celle de la
variable locale du même bloc de code, puis de la variable locale des fonctions
englobantes, puis de la variable globale. 


C012AL-W4-S7-partie1 ERRATA
voir l'errata de la vidéo C012AL-W4-S6

C012AL-W4-S7-partie2 ERRATA

L'utilisation impropre du terme scope (voir l'errata de C012AL-W4-S6) lors 
que l'explication de la directive globale peut entrainer une confusion. 
Comme expliqué dans la vidéo, global est une directive au compilateur. 
Cela veut dire qu'avant l'exécution du code, chaque variable des fonctions est
classée comme variable locale si elle est affectée dans la fonction
ou globale si la directive global est présente dans le bloc de code
de la fonction pour cette variable.  Donc si une directive global x est présente
dans le bloc de code d'une fonction, la variable x sera considérée comme 
la variable globale x dans tout le bloc de code de la fonction. Pour cette
raison, il est recommandé (et même obligatoire dans certaines versions récentes
de Python) de mettre la directive global x avant toute utilisation de x dans
le même bloc de code. 


C012AL-W4-S8-partie1 OK pas d'errata
C012AL-W4-S8-partie2 OK pas d'errata

C012AL-W5-S1 OK pas d'errata
C012AL-W5-S2 OK pas d'errata
C012AL-W5-S3 OK pas d'errata
C012AL-W5-S4 OK pas d'errata
C012AL-W5-S5 OK pas d'errata
C012AL-W5-S6 OK pas d'errata
C012AL-W5-S7 OK pas d'errata